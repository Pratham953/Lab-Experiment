// Interface defining common functionalities for vehicles
interface Vehicle1 {
    void changeGear(int newGear);
    void speedUp(int increment);
    void applyBrakes(int decrement);
}

// Class implementing Vehicle interface for Bicycle
class Bicycle implements Vehicle1 {
    private int speed;
    private int gear;


    public Bicycle() {
        this.speed = 0;
        this.gear = 1;
    }

    @Override
    public void changeGear(int newGear) {
        this.gear = newGear;
        System.out.println("Bicycle gear changed to: " + gear);
    }

    @Override
    public void speedUp(int increment) {
        this.speed += increment;
        System.out.println("Bicycle speed increased to: " + speed + " km/h");
    }

    @Override
    public void applyBrakes(int decrement) {
        this.speed -= decrement;
        if (this.speed < 0) this.speed = 0;
        System.out.println("Bicycle speed decreased to: " + speed + " km/h");
    }
}

// Class implementing Vehicle interface for Bike
class Bike implements Vehicle1 {
    private int speed;
    private int gear;

    public Bike() {
        this.speed = 0;
        this.gear = 1;
    }

    @Override
    public void changeGear(int newGear) {
        this.gear = newGear;
        System.out.println("Bike gear changed to: " + gear);
    }

    @Override
    public void speedUp(int increment) {
        this.speed += increment;
        System.out.println("Bike speed increased to: " + speed + " km/h");
    }

    @Override
    public void applyBrakes(int decrement) {
        this.speed -= decrement;
        if (this.speed < 0) this.speed = 0;
        System.out.println("Bike speed decreased to: " + speed + " km/h");
    }
}

// Class implementing Vehicle interface for Car
class Car implements Vehicle1 {
    private int speed;
    private int gear;

    public Car() {
        this.speed = 0;
        this.gear = 1;
    }

    @Override
    public void changeGear(int newGear) {
        this.gear = newGear;
        System.out.println("Car gear changed to: " + gear);
    }

    @Override
    public void speedUp(int increment) {
        this.speed += increment;
        System.out.println("Car speed increased to: " + speed + " km/h");
    }

    @Override
    public void applyBrakes(int decrement) {
        this.speed -= decrement;
        if (this.speed < 0) this.speed = 0;
        System.out.println("Car speed decreased to: " + speed + " km/h");
    }
}

// Main class to test the Vehicle interface and its implementations
class Vehicle {

    public static void main(String[] args) {
        // Create objects of Bicycle, Bike, and Car
        Vehicle1 bicycle = new Bicycle();
        Vehicle1 bike = new Bike();
        Vehicle1 car = new Car();

        // Test Bicycle functionalities
        System.out.println("Testing Bicycle:");
        bicycle.changeGear(2);
        bicycle.speedUp(10);
        bicycle.applyBrakes(3);

        // Test Bike functionalities
        System.out.println("\nTesting Bike:");
        bike.changeGear(3);
        bike.speedUp(50);
        bike.applyBrakes(20);

        // Test Car functionalities
        System.out.println("\nTesting Car:");
        car.changeGear(4);
        car.speedUp(80);
        car.applyBrakes(30);
    }
}
